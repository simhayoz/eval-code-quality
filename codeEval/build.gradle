/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'jacoco'
}

java {
    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'

    // org Eclipse for AST.
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.20.0'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    testImplementation 'org.hamcrest:hamcrest-library:2.1'
}

application {
    // Define the main class for the application.
    mainClassName = 'eval.code.App'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        reports.html.destination file("${buildDir}/reports/coverage")
    }
}

build {
    dependsOn jacocoTestReport
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    // Show stdout/stderr, helps for debugging
    testLogging.showStandardStreams true
    // Do not fail builds because of failing tests
    ignoreFailures true

    testLogging {
        // Always show all tests, even passed ones
        events 'passed', 'skipped', 'failed'
        // Always run all tests
        outputs.upToDateWhen { false }
    }
}
